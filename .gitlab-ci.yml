stages: 
  #- build 
  #- test 
  - analysis
  - deploy 
 
image: docker/compose:latest
 
services: 
  - docker:dind 
 
variables: 
  DOCKER_DRIVER: overlay2 
  DOCKER_TLS_CERTDIR: ""
  NODE_ENV: ci
 
before_script: 
  - export NODE_ENV=ci
  - docker-compose --version

 
# build: 
#   stage: build 
#   tags:  
#     - docker  
#     - linux  
#     - nodejs 
#   script: 
#     - docker-compose build --no-cache 

# test: 
#   stage: test 
#   script: 
#     - docker-compose up -d
#     - docker-compose exec -T service1 npm install 
#     - docker-compose exec -T service1 npm test 
  
#   after_script: 
#     - docker-compose down

analysis: 
  stage: analysis 
  image: node:14 # Use Node.js image for analysis stage
  script: 
    - cd Service1 
    - npm install 
    - npx eslint . # Run ESLint for Service1

deploy: 
  stage: deploy 
  script: 
    - docker-compose up -d 
  only: 
    - main
    - project